buildscript {
    ext {
        springBootVersion = '2.6.6'
        javaVersion = '17'
        spotlessVersion = '6.25.0'
        jjwtVersion = '0.11.5'
        logstashVersion = '6.4'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:${spotlessVersion}"
    }
}

allprojects {
    group = 'com.example'
    version = '0.0.1-SNAPSHOT'
    
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.diffplug.spotless'
    
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    
    dependencies {
        // Spring Boot Starters
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.boot:spring-boot-starter-data-rest'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        
        // Spring Retry
        implementation 'org.springframework.retry:spring-retry'
        
        // JWT
        implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
        implementation "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
        implementation "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"
        
        // Database
        implementation 'mysql:mysql-connector-java'
        implementation 'com.h2database:h2'
        
        // Spring Session
        implementation 'org.springframework.session:spring-session-core'
        
        // Development Tools
        compileOnly 'org.springframework.boot:spring-boot-devtools'
        
        // Logging
        implementation 'ch.qos.logback:logback-classic'
        implementation 'org.slf4j:jul-to-slf4j'
        implementation 'org.slf4j:log4j-over-slf4j'
        implementation "net.logstash.logback:logstash-logback-encoder:${logstashVersion}"
        implementation 'ch.qos.logback:logback-core'
        implementation 'ch.qos.logback:logback-access'
        
        // Lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        
        // Testing
        implementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
    
    test {
        useJUnitPlatform()
    }

    spotless {
        enforceCheck = false
        java {
            importOrder()
            removeUnusedImports()
            googleJavaFormat('1.15.0').aosp().reflowLongStrings()
            trimTrailingWhitespace()
            endWithNewline()
        }
        format 'misc', {
            target '**/*.md', '**/*.sql', '**/*.yml', '**/*.yaml', '**/*.json', '**/*.xml'
            targetExclude '**/build/**', '**/target/**', '**/.gradle/**'
            trimTrailingWhitespace()
            indentWithSpaces(4)
            endWithNewline()
        }
    }
} 